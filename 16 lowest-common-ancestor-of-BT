question:- https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(root==NULL || root==p || root==q) return root; // base case

        TreeNode* left=lowestCommonAncestor(root->left, p, q);
        TreeNode* right=lowestCommonAncestor(root->right, p, q);
        // result
        if(left==NULL){ // if left is null and maybe right has the value
            return right;
        }else if(right==NULL){
            return left;
        }else{
            return root; // both left and right are not null and we got our answer
        }
    }
};
// striver's tree playlist
