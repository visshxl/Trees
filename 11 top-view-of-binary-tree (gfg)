question:-https://www.geeksforgeeks.org/problems/top-view-of-binary-tree/1
class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        vector<int> ans;
        queue<pair<Node*, int>> q;
        q.push({root, 0});
        map<int, int> mp;
        while(!q.empty()){
            auto it=q.front();
            q.pop();
            Node* currNode=it.first;
            int level=it.second;
            if(mp.find(level)==mp.end()) mp[level]=currNode->data;
            if(currNode->left){
                q.push({currNode->left, level-1});
            }
            if(currNode->right){
                q.push({currNode->right, level+1});
            }
        }
        for(auto it:mp){
            ans.push_back(it.second);
        }
        return ans;
    }
};
// striver's tree playlist
// similar approach of vertical order traversal of binary tree on leetcode
